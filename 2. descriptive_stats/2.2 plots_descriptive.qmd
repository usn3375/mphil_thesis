---
title: "Descriptive Plots"
author: "USN 3375"
format:
  html:
    self-contained: true
    toc: true
    toc-location: left
    toc-title: "Table of Contents"
    toc-numbering: true
    number-sections: true
editor_options: 
  chunk_output_type: console
---

```{=html}
<style>
body {
text-align: justify}
</style>
```

```{r, echo = FALSE}
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
options(scipen = 999)
```

```{r}
library(librarian)
shelf(
  ggplot2,
  patchwork,
  data.table,
  tidytable
)

source("./programs/helper_scripts/plot_theme.R")

data <- readRDS("./data/processed/data_preprocessed.RDS") |>
  as.data.table()

data_id <- data |>
  arrange(ArrivalDateTime) |>
  distinct(id, .keep_all = TRUE)
```

# Univariate Plots
## EDLOS
```{r}
plot_edlos_hist <- data |> 
  ggplot(
  aes(x = EDLOS_hours)) +
  geom_histogram(
    bins = 30,
    colour = "white",
    fill = "blue4",
    alpha = 0.72
    ) +
  basic_theme +
  labs(x = "EDLOS (hours)", y = "Count") +
  scale_x_continuous(limits = c(0,70), breaks = seq(0,70,10)) +
  scale_y_continuous(limits = c(0,100000))

plot_edlos_hist_zoom <- plot_edlos_hist +
  scale_x_continuous(limits = c(0,12), breaks = seq(0,12,2)) +
  scale_y_continuous(limits = c(0,20000))
```

```{r, echo = F}
plot_edlos_hist
plot_edlos_hist_zoom

ggsave(
  filename = "./output/figures/descriptive/edlos_hist_total.pdf",
  plot = plot_edlos_hist,
  width = 4.61,
  height = 3.65
)

ggsave(
  filename = "./output/figures/descriptive/edlos_hist_zoom.pdf",
  plot = plot_edlos_hist_zoom,
  width = 4.61,
  height = 3.65
)
```

## IPLOS
* Hospital stays below 50 days of length.
* Includes only hospitalisations from a patients first ED visit, as this is what the model focuses on.

```{r}
plot_iplos_hist <- data_id |>
  filter(!is.na(AdmissionLoS) & AdmissionLoS < 40) |>
  ggplot(aes(x = AdmissionLoS)) +
  geom_histogram(
    bins = 20,
    colour = "white",
    fill = "blue4",
    alpha = 0.72
    ) +
  basic_theme +
  labs(x = "IPLOS (days)", y = "Count")
```

```{r}
plot_iplos_hist

ggsave(
  filename = "./output/figures/descriptive/iplos_hist.pdf",
  plot = plot_iplos_hist,
  width = 4.61,
  height = 3.65
)
```

## Crowding
```{r}
plot_crowd_hist <- data |>
  ggplot(aes(x = ed_occupancy_at_arrival)) +
  geom_histogram(
    bins = 22,
    colour = "white",
    fill = "blue4",
    alpha = 0.72
  ) +
  scale_y_continuous(limits = c(0,40000)) +
  scale_x_continuous(breaks = seq(0,175,25)) +
  labs(
    x = "ED occupancy at arrival\n(No. of patients)",
    y = "Count"
  ) +
  basic_theme
```

```{r, echo = F}
plot_crowd_hist

ggsave(
  filename = "./output/figures/descriptive/crowd_hist.pdf",
  plot = plot_crowd_hist,
  width = 4.61,
  height = 3.75
)
```

## Time from ED visit to death
```{r}
plot_hist_days_to_death_100 <- data |>
  mutate(days_to_death = stop_time - start_time) |>
  filter(next_event_death == 1 & days_to_death < 100) |>
  ggplot(aes(x = days_to_death)) +
    geom_histogram(
      bins = 22,
      colour = "white",
      fill = "blue4",
      alpha = 0.72
    ) +
  basic_theme +
  labs(x = "Days between ED visit and death", y = "Count") +
  scale_y_continuous(breaks = seq(0,1200,300))
```

```{r, echo = FALSE}
plot_hist_days_to_death_100

ggsave(
  filename = "./output/figures/descriptive/timetodeath_hist.pdf",
  plot = plot_hist_days_to_death_100,
  width = 4.61,
  height = 3.65
)
```

# Bivariate Plots

## EDLOS and Admission Status

```{r}
plot_hist_edlos_nonadmin <- data |>
  filter(EDLOS_hours <= 40, AdmittedNonAdmitted == "non_admitted") |>
  ggplot(aes(x = EDLOS_hours, fill = "Not admitted")) +
  geom_histogram(
    bins   = 40,
    colour = "white",
    alpha  = 0.72
  ) +
  labs(
    x = "EDLOS (hours)",
    y = "Count"
  ) +
  basic_theme

plot_hist_edlos_admin <- data |>
  filter(EDLOS_hours <= 40, AdmittedNonAdmitted == "admitted") |>
  ggplot(aes(x = EDLOS_hours, fill = "Admitted")) +
  geom_histogram(
    bins = 40,
    colour = "white",
    alpha = 0.72
  ) +
  basic_theme +
  labs(
    x = "EDLOS (hours)",
    y = "Count"
  )

# define one common legend for both
shared_fill_1 <- scale_fill_manual(
  name   = "Hospital Admission",
  values = c(
    "Admitted" = "blue4",
    "Not admitted" = "red"
  ),
  drop = FALSE
)

shared_fill_2 <- scale_fill_manual(
  name   = NULL,
  values = c(
    "Admitted" = "blue4",
    "Not admitted" = "red"
  ),
  drop = FALSE
)

plot_combined_edlos_admit <- (plot_hist_edlos_nonadmin + shared_fill_1) /
                 (plot_hist_edlos_admin + shared_fill_2) +
  plot_layout(heights = c(1,1), guides = "collect") &
  theme(
    legend.position  = "right",
    legend.spacing.y = unit(-0.5, "lines")    # shrink spacing between keys
  )
```

```{r, echo = FALSE}
plot_combined_edlos_admit

ggsave(
  filename = "./output/figures/descriptive/edlos_admit.pdf",
  plot = plot_combined_edlos_admit,
  width = 5.5,
  height = 5.1
)
```

## EDLOS, Crowding, and Admission

* The percentiles are preferred over the raw crowding metric - for aesthetic reasons and for less overplotting.
* Only plotted 40k, to avoid over-plotting.

### Scatter Plot

```{r}
label_admit <- c(
  admitted = "Admitted Patients",
  non_admitted = "Non-admitted Patients"
)

set.seed(123)
plot_edlos_crowd_admit <- data |>
  slice_sample(n = 10000) |>
  ggplot(aes(x = ed_occupancy_at_arrival, y = EDLOS_hours)) +
  geom_point(alpha = 0.08) +
  facet_wrap(~AdmittedNonAdmitted, labeller = labeller(AdmittedNonAdmitted = label_admit)) +
  labs(
    y = "EDLOS (hours)",
    x = "ED Occupancy at Arrival"
  ) +
  scale_x_continuous(limits = c(0,175), breaks = seq(0,175,25)) +
  scale_y_continuous(limits = c(0,72), breaks = seq(0,72,12)) +
  geom_smooth(method = "lm", se = F) +
  basic_theme
```

```{r, echo = F}
plot_edlos_crowd_admit
```

### Scatter with percentiles as x axis

```{r}
label_admit <- c(
  admitted = "Admitted Patients",
  non_admitted = "Non-admitted Patients"
)

set.seed(123)
plot_edlos_crowd_admit <- data |>
  group_by(AdmittedNonAdmitted) |>
  slice_sample(n = 20000) |>
  ungroup() |>
  mutate(
    occupancy_percentile = 100 * percent_rank(ed_occupancy_at_arrival)) |>
  ggplot(aes(x = occupancy_percentile, y = EDLOS_hours)) +
  geom_jitter(alpha = 0.1) +
  facet_wrap(~ AdmittedNonAdmitted, labeller = labeller(AdmittedNonAdmitted = label_admit)) +
  scale_y_continuous(limits = c(0,48.5), breaks = seq(0,48,6)) +
  scale_x_continuous(labels = function(x) paste0("P",x)) +
  geom_smooth(method = "loess", se = FALSE) +
  labs(
    y = "EDLOS (hours)",
    x = "ED occupancy at arrival\n(percentiles)"
  ) +
  basic_theme
```

```{r, echo = F}
plot_edlos_crowd_admit

# saved as PNG, because PDF becomes slow with lots of points
ggsave(
  filename = "./output/figures/descriptive/edlos_admit_quantiles.png",
  plot = plot_edlos_crowd_admit,
  width = 6.1,
  height = 2.9,
  dpi = 600
)
```
